{"version":3,"sources":["component/LoginForm.js","component/MessageForm.js","component/MyMessage.js","component/TheirMessage.js","component/ChatFeed.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MessageForm","props","setValue","chatId","creds","text","trim","length","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","userName","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a97849e.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\nconst LoginForm = ()=>{\r\n    const [username ,setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit =async (e)=>{\r\n        e.preventDefault()\r\n\r\n        const authObject ={'Project-ID':\"ca9083a9-f4aa-4d40-8207-73bbb4b855b4\", 'User-Name': username, 'User-Secret':password}\r\n        \r\n        try{\r\n            await axios.get('https://api.chatengine.io/chats', {headers: authObject})\r\n\r\n            localStorage.setItem('username', username)\r\n            localStorage.setItem('password', password)\r\n\r\n            window.location.reload()\r\n        }catch(error){\r\n            setError('Either the user-name or password is incorrect')\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}> \r\n                    <input type=\"text\" value={username} onChange={(e)=> setUsername(e.target.value)} className=\"input\" placeholder=\"username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e)=> setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm","import { useState } from \"react\"\r\nimport {sendMessage, isTyping} from 'react-chat-engine'\r\nimport {SendOutlined, PictureOutlined} from '@ant-design/icons'\r\n\r\nconst MessageForm =(props)=>{\r\n\r\n    const [value, setValue] = useState('')\r\n    const {chatId, creds} =props\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault()\r\n        setValue('')\r\n\r\n        const text = value.trim()\r\n\r\n        if(text.length>0) sendMessage(creds, chatId, { text })\r\n\r\n    }\r\n\r\n    const handleChange= (e)=>{\r\n        setValue(e.target.value)\r\n\r\n        isTyping(props, chatId)\r\n    }\r\n\r\n    const handleUpload =(e)=>{\r\n        sendMessage(creds, chatId, {files: e.target.files, text:''})\r\n    }\r\n\r\n    return(\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value= {value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n\r\n            <label htmlFor= \"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display:'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\"/>\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default MessageForm","const MyMessage =(props)=>{\r\n    const {message} = props\r\n\r\n    if(message?.attachments?.length>0){\r\n        return(\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{float:'right'}}\r\n            />\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"message\" style={{float:'right', marginRight:'18px', color:\"white\", backgroundColor:'#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyMessage","const TheirMessage =(props)=>{\r\n    const {lastMessage, message} = props\r\n \r\n    const isFirstMessageByUser = !lastMessage || lastMessage?.sender?.userName !== message?.sender?.userName\r\n    return(\r\n        <div className='message-row'>\r\n            {\r\n                isFirstMessageByUser &&(\r\n                    <div className=\"message-avatar\"\r\n                        style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                    />\r\n                )\r\n            }\r\n            {message?.attachments?.length>0 \r\n            ?(\r\n                <img \r\n                    src={message.attachments[0].file}\r\n                    alt=\"message-attachment\"\r\n                    className=\"message-image\"\r\n                    style={{marginLeft: isFirstMessageByUser?'4px':'48px'}}\r\n                />\r\n            )\r\n            :(\r\n                <div className=\"message\" style={{float:'left', backgroundColor:'#CABCDC', marginLeft: isFirstMessageByUser?'4px':'48px'}}>\r\n                    {message.text}\r\n                </div>\r\n            )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TheirMessage","import MessageForm from './MessageForm'\r\nimport MyMessage from './MyMessage'\r\nimport TheirMessage from './TheirMessage'\r\n\r\nconst ChatFeed = (props)=>{\r\n    const {chats, activeChat, userName, messages }=props;\r\n\r\n    const chat = chats && chats[activeChat]\r\n\r\n    const renderReadReceipts =(message, isMyMessage)=>{\r\n        return chat.people.map((person, index)=> person.last_read === message.id &&(\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage?'right':'left',\r\n                    backgroundImage:`url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages =()=>{\r\n        const keys = Object.keys(messages)\r\n        \r\n        return keys.map((key, index)=>{\r\n            const message = messages[key]\r\n            const lastMessageKey = index === 0? null :keys[index-1]\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{width:'100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ?<MyMessage message={message}/>\r\n                            :<TheirMessage message={message} lastMessage={message[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage? '10px': '0px', marginLeft: isMyMessage?'0px': '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        \r\n    }\r\n    \r\n    if(!chat) return (\r\n        <div className=\"chat-feed\">\r\n            <h1>Create new group</h1>\r\n        </div>\r\n    )\r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {\r\n                        chat.people.map((person)=>`${person.person.username}`)\r\n                    }\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height:'100px'}}/>\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ChatFeed","import './App.css';\nimport {ChatEngine} from 'react-chat-engine'\nimport LoginForm from './component/LoginForm'\nimport ChatFeed from './component/ChatFeed'\n \nconst App = ()=>{\n  if(!localStorage.getItem('username')) return <LoginForm/>\n\n  return(\n    <ChatEngine \n      height=\"100vh\"\n      projectID=\"ca9083a9-f4aa-4d40-8207-73bbb4b855b4\"\n      userName={localStorage.getItem('username')}\n      userSecret={localStorage.getItem('password')}\n      renderChatFeed={(chatAppProps)=><ChatFeed {...chatAppProps} />}\n    />\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}